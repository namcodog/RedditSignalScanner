{
  "openapi": "3.1.0",
  "info": {
    "title": "Reddit Signal Scanner",
    "description": "Reddit Signal Scanner API (Phase 1/2 implementation)",
    "version": "0.1.0"
  },
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Create a new account and receive an access token",
        "operationId": "register_user_api_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Authenticate existing user and receive an access token",
        "operationId": "login_user_api_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analyze": {
      "post": {
        "tags": [
          "analysis"
        ],
        "summary": "Create analysis task",
        "operationId": "create_analysis_task_api_analyze_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/analyze/stream/{task_id}": {
      "get": {
        "tags": [
          "analysis"
        ],
        "summary": "Task streaming progress (SSE)",
        "operationId": "stream_task_progress_api_analyze_stream__task_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/status/{task_id}": {
      "get": {
        "tags": [
          "status"
        ],
        "summary": "\u83b7\u53d6\u4efb\u52a1\u72b6\u6001\uff08\u7f13\u5b58\u4f18\u5148\uff09",
        "operationId": "get_task_status_api_status__task_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatusSnapshot"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/report/{task_id}": {
      "get": {
        "tags": [
          "analysis"
        ],
        "summary": "Fetch completed analysis report",
        "operationId": "get_analysis_report_api_report__task_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/healthz": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Health Check",
        "operationId": "health_check_api_healthz_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Health Check Api Healthz Get"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AnalysisRead": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "task_id": {
            "type": "string",
            "format": "uuid",
            "title": "Task Id"
          },
          "insights": {
            "$ref": "#/components/schemas/InsightsPayload"
          },
          "sources": {
            "$ref": "#/components/schemas/SourcesPayload"
          },
          "confidence_score": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence Score"
          },
          "analysis_version": {
            "type": "string",
            "title": "Analysis Version"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "task_id",
          "insights",
          "sources",
          "analysis_version",
          "created_at"
        ],
        "title": "AnalysisRead"
      },
      "AuthTokenResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          },
          "user": {
            "$ref": "#/components/schemas/AuthUser"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "access_token",
          "expires_at",
          "user"
        ],
        "title": "AuthTokenResponse"
      },
      "AuthUser": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "email"
        ],
        "title": "AuthUser"
      },
      "CompetitorSignal": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "mentions": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Mentions"
          },
          "sentiment": {
            "type": "string",
            "title": "Sentiment"
          },
          "strengths": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Strengths"
          },
          "weaknesses": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Weaknesses"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "name",
          "mentions",
          "sentiment"
        ],
        "title": "CompetitorSignal"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InsightsPayload": {
        "properties": {
          "pain_points": {
            "items": {
              "$ref": "#/components/schemas/PainPoint"
            },
            "type": "array",
            "title": "Pain Points"
          },
          "competitors": {
            "items": {
              "$ref": "#/components/schemas/CompetitorSignal"
            },
            "type": "array",
            "title": "Competitors"
          },
          "opportunities": {
            "items": {
              "$ref": "#/components/schemas/OpportunitySignal"
            },
            "type": "array",
            "title": "Opportunities"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "pain_points",
          "competitors",
          "opportunities"
        ],
        "title": "InsightsPayload"
      },
      "LoginRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "title": "Password"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "LoginRequest"
      },
      "OpportunitySignal": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description"
          },
          "relevance_score": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Relevance Score"
          },
          "potential_users": {
            "type": "string",
            "title": "Potential Users"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "description",
          "relevance_score",
          "potential_users"
        ],
        "title": "OpportunitySignal"
      },
      "PainPoint": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description"
          },
          "frequency": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Frequency"
          },
          "sentiment_score": {
            "type": "number",
            "maximum": 1.0,
            "minimum": -1.0,
            "title": "Sentiment Score"
          },
          "example_posts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Example Posts"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "description",
          "frequency",
          "sentiment_score"
        ],
        "title": "PainPoint"
      },
      "RegisterRequest": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "maxLength": 128,
            "minLength": 8,
            "title": "Password"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "RegisterRequest"
      },
      "ReportRead": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "analysis_id": {
            "type": "string",
            "format": "uuid",
            "title": "Analysis Id"
          },
          "html_content": {
            "type": "string",
            "minLength": 1,
            "title": "Html Content"
          },
          "template_version": {
            "type": "string",
            "title": "Template Version"
          },
          "generated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Generated At"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "id",
          "analysis_id",
          "html_content",
          "template_version",
          "generated_at"
        ],
        "title": "ReportRead"
      },
      "ReportResponse": {
        "properties": {
          "task_id": {
            "type": "string",
            "format": "uuid",
            "title": "Task Id"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "analysis": {
            "$ref": "#/components/schemas/AnalysisRead"
          },
          "report": {
            "$ref": "#/components/schemas/ReportRead"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "task_id",
          "status",
          "analysis",
          "report"
        ],
        "title": "ReportResponse"
      },
      "SourcesPayload": {
        "properties": {
          "communities": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Communities"
          },
          "posts_analyzed": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Posts Analyzed"
          },
          "cache_hit_rate": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Cache Hit Rate"
          },
          "analysis_duration_seconds": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Analysis Duration Seconds"
          },
          "reddit_api_calls": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Reddit Api Calls"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "communities",
          "posts_analyzed",
          "cache_hit_rate"
        ],
        "title": "SourcesPayload"
      },
      "TaskCreate": {
        "properties": {
          "product_description": {
            "type": "string",
            "maxLength": 2000,
            "minLength": 10,
            "title": "Product Description"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "product_description"
        ],
        "title": "TaskCreate"
      },
      "TaskCreateResponse": {
        "properties": {
          "task_id": {
            "type": "string",
            "format": "uuid",
            "title": "Task Id"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "estimated_completion": {
            "type": "string",
            "format": "date-time",
            "title": "Estimated Completion"
          },
          "sse_endpoint": {
            "type": "string",
            "title": "Sse Endpoint"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "task_id",
          "status",
          "created_at",
          "estimated_completion",
          "sse_endpoint"
        ],
        "title": "TaskCreateResponse"
      },
      "TaskStatus": {
        "type": "string",
        "enum": [
          "pending",
          "processing",
          "completed",
          "failed"
        ],
        "title": "TaskStatus"
      },
      "TaskStatusSnapshot": {
        "properties": {
          "task_id": {
            "type": "string",
            "format": "uuid",
            "title": "Task Id"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "progress": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 0.0,
            "title": "Progress"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "retry_count": {
            "type": "integer",
            "title": "Retry Count",
            "default": 0
          },
          "failure_category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Failure Category"
          },
          "last_retry_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Retry At"
          },
          "dead_letter_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dead Letter At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "task_id",
          "status",
          "progress",
          "message",
          "updated_at"
        ],
        "title": "TaskStatusSnapshot"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
